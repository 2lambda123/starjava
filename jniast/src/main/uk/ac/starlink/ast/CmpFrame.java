/* ********************************************************
 * This file automatically generated by CmpFrame.pl.
 *                   Do not edit.                         *
 **********************************************************/

package uk.ac.starlink.ast;


/**
 * Java interface to the AST CmpFrame class
 *  - compound Frame. 
 * A CmpFrame is a compound Frame which allows two component Frames
 * (of any class) to be merged together to form a more complex
 * Frame. The axes of the two component Frames then appear together
 * in the resulting CmpFrame (those of the first Frame, followed by
 * those of the second Frame).
 * <p>
 * Since a CmpFrame is itself a Frame, it can be used as a
 * component in forming further CmpFrames. Frames of arbitrary
 * complexity may be built from simple individual Frames in this
 * way.
 * 
 * 
 * @see  <a href='http://star-www.rl.ac.uk/cgi-bin/htxserver/sun211.htx/?xref_CmpFrame'>AST CmpFrame</a>  
 */
public class CmpFrame extends Frame{
    /** 
     * Create a CmpFrame.   
     * @param  frame1  Pointer to the first component Frame.
     * 
     * @param  frame2  Pointer to the second component Frame.
     * 
     * @throws  AstException  if an error occurred in the AST library
    */
    public CmpFrame( Frame frame1, Frame frame2 ) {
        construct( frame1, frame2 );
    }
    private native void construct( Frame frame1, Frame frame2 );

    /**
     * Gets the component Frames from this CmpFrame.
     * This method returns pointers to two Frames which, when applied in
     * parallel, are equivalent to this CmpFrame.
     *
     * @return  a two-element array giving the component Frames
     * @throws  AstException  if an error occurs in the AST library
     */
    public Frame[] decompose() {
        Mapping[] frms = decompose( null, null );
        return new Frame[] { (Frame) frms[ 0 ], (Frame) frms[ 1 ] };
    }

}
