<?xml version="1.0"?>

<!--
 !  Main source build file
 !
 !   This file describes how to build the Starlink java system from a
 !   source release. It requires Apache ANT and a Java Development Kit.
 ! 
 !   The main targets are:
 !
 !      build          -> compiles the system
 !      javadocs       -> creates the API documentation
 !      install        -> installs the system and documentation
 !      install        -> deinstalls the system
 !      clean          -> cleans up the build
 !      export         -> create full export distributions of packages
 !
 !   Authors:
 !      Peter W. Draper (2-JUL-2002)
 !
 !-->

<project name="Build file for Starlink" default="build" basedir=".">

  <!-- If either or both of these files exist then any properties
   !   contained within them will override those defined here.  -->
  <property file="${user.home}/.stardev.properties"/>
  <property file=".properties"/>

  <!--
   !  =================
   !  Global Properties
   !  =================
   !-->

  <!-- Directory for the Starlink installation (usually /star/java)-->
  <property name="star.dir" value="${basedir}/../"/>

  <!-- Directory to install into (install target, usually /star/java)-->
  <property name="star.install" value="${star.dir}"/>

  <!-- Directory that contains the Starlink jar tree -->
  <property name="star.jar.dir" value="${star.dir}/lib"/>

  <!-- Directory that contains the locally built sources (usually
   !   /star/java/source for full distribution) -->
  <property name="star.build.dir" value="${basedir}"/>

  <!-- Whether to generate Java documentation -->
  <property name="javadocs.required" value="false"/>

  <!-- Directory that any archives should be placed into. The local
   !   directort by default -->
  <property name="star.archive.dir" value="${basedir}"/>

  <!--
   !  ================
   !  Local Properties
   !  ================
   !-->

  <!-- Define the package name and current versions. Use "full" names
   !   to avoid passing these down the packages. All parameters are
   !   passed by default. -->
  <property name="FullName" value="Starlink"/>
  <property name="fullname" value="starlink"/>
  <property name="fullversion" value="0.1"/>

  <!-- Compilation options -->
  <property name="debug" value="true"/>
  <property name="deprecation" value="false"/>
  <property name="optimize" value="true"/>

  <!-- Default target for the sub-packages -->
  <property name="what" value="build"/>

   <!-- 
    !  ======================================
    !  Execute all ANT in all sub-directories
    !  ======================================
    !
    !  Execute a target in each of the sub-directories. The target
    !  invoked is defined by the "what" property. New packages should
    !  have an entry created in the correct dependency order. Note
    !  that all properties defined in this file are passed on.
    !-->
  <target name="call_package_ant">

     <echo message="Executing JUnit target: ${what}"/>
     <ant dir="./junit" target="${what}"/>

     <echo message="Executing axis target: ${what}"/>
     <ant dir="./axis" target="${what}"/>

     <echo message="Executing dom4j target: ${what}"/>
     <ant dir="./dom4j" target="${what}"/>

     <echo message="Executing Jetty target: ${what}"/>
     <ant dir="./jetty" target="${what}"/>

     <echo message="Executing JSky target: ${what}"/>
     <ant dir="./jsky" target="${what}"/>

     <echo message="Executing UTIL target: ${what}"/>
     <ant dir="./util" target="${what}"/>

     <echo message="Executing JNIAST target: ${what}"/>
     <ant dir="./jniast" target="${what}"/>

     <echo message="Executing JNIHDS target: ${what}"/>
     <ant dir="./jnihds" target="${what}"/>

     <echo message="Executing HDS target: ${what}"/>
     <ant dir="./hds" target="${what}"/>

     <echo message="Executing compatibility NDArray target: ${what}"/>
     <ant dir="./oldarray" target="${what}"/>

     <echo message="Executing NDArray target: ${what}"/>
     <ant dir="./array" target="${what}"/>

     <echo message="Executing HDX target: ${what}"/>
     <ant dir="./hdx" target="${what}"/>

     <echo message="Executing SOAPSERVER target: ${what}"/>
     <ant dir="./soapserver" target="${what}"/>

     <echo message="Executing SOG target: ${what}"/>
     <ant dir="./sog" target="${what}"/>

  </target>

  <!--
   !   =================
   !   Prepare the build
   !   =================
   !
   !  Do any jobs that are required before any other target can
   !  proceed. This isn't used at present, but shows the sort of thing
   !  you might want to do.
   !-->
  <target name="prepare">
    <tstamp>
      <format property="year" pattern="yyyy" />
    </tstamp>
    <filterchain id="install.filters">
      <replacetokens>
        <token key="VERSION" value="${version}" />
        <token key="DATE" value="${TODAY}" />
        <token key="TIME" value="${TSTAMP}" />
      </replacetokens>
    </filterchain>
  </target>

  <!--
   !   ==================
   !   Build all packages
   !   ==================
   !-->
  <target name="build" depends="prepare" 
          description="--> compiles all packages">

     <antcall target="call_package_ant">
        <param name="what" value="build"/>
     </antcall>

  </target>

  <!--
   !   ============================================
   !   Cleans up build and distribution directories
   !   ============================================
   !-->
  <target name="clean" depends="prepare" description="--> cleans up build">

     <antcall target="call_package_ant">
        <param name="what" value="clean"/>
     </antcall>

  </target>

  <!--
   !   ================================
   !   Install into the "Starlink" tree
   !   ================================
   !-->
  <target name="install" depends="prepare" 
          description="--> install into Starlink tree">

     <antcall target="call_package_ant">
        <param name="what" value="install"/>
     </antcall>

  </target>

  <!--
   !   ===================================
   !   De-install from the "Starlink" tree
   !   ===================================
   !-->
  <target name="deinstall" depends="prepare" 
          description="--> undo the install target">

     <antcall target="call_package_ant">
        <param name="what" value="deinstall"/>
     </antcall>

  </target>

  <!--
   !   =============================
   !   Creates the API documentation
   !   =============================
   !
   ! This is a difficult job as we may want to build all javadocs 
   ! into a single tree... So avoid for now and just do what we can.
   !-->
  <target name="javadocs" depends="prepare" 
          description="--> generate the java documentation">

     <antcall target="call_package_ant">
        <param name="what" value="javadocs"/>
     </antcall>

  </target>

  <!--
   !   ===============================
   !   Create the export distributions
   !   ===============================
   !-->
  <target name="export" depends="prepare" 
          description="--> create all export archives">

     <antcall target="call_package_ant">
        <param name="what" value="export"/>
     </antcall>

  </target>

  <!--
   !   =================
   !   Run the testcases
   !   =================
   ! Do this when know how!
   !-->

</project>

